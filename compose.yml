services:
  api:
    image: ghcr.io/neojelll/url-shortener-api:0.1.14
    ports:
      - "8000:8000"
    environment:
      CACHE_TTL: "3600"
      CACHE_HOST: "redis"
      CACHE_PORT: "6379"
      BROKER_HOST: "kafka"
      BROKER_PORT: "9092"
      DB_USERNAME: "neojelll"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_NAME: "mydatabase"
      DB_PASSWORD: "123"
      SHORTENER_TOPIC_NAME: "main"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy

  expiration-manager:
    image: ghcr.io/neojelll/url-shortener-expiration-manager:0.1.29
    environment:
      DB_USERNAME: "neojelll"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_NAME: "mydatabase"
      DB_PASSWORD: "123"
    depends_on:
      postgres:
        condition: service_healthy

  url-shortener:
    image: ghcr.io/neojelll/url-shortener-service:0.1.7
    environment:
      CACHE_TTL: "3600"
      CACHE_HOST: "redis"
      CACHE_PORT: "6379"
      BROKER_HOST: "kafka"
      BROKER_PORT: "9092"
      DB_USERNAME: "neojelll"
      DB_HOST: "postgres"
      DB_PORT: "5432"
      DB_NAME: "mydatabase"
      DB_PASSWORD: "123"
      SHORTENER_TOPIC_NAME: "main"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo", "test"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9094:9094"
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      zookeeper:
        condition: service_healthy

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: "neojelll"
      POSTGRES_DB: "mydatabase"
      POSTGRES_PASSWORD: "123"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neojelll"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  redis_data:
  postgres_data:
