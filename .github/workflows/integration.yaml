name: Integration

on:
  push:
    branches:
      - '**'
      - '!main' 

jobs:
  check_pyproject:
    runs-on: ubuntu-latest
    outputs:
      pyproject_found: ${{ steps.check_pyproject.outputs.PYPROJECT_FOUND }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check directory name
        run: |
          DIRECTORY=$(git log -1 --name-only --pretty=format: | awk -F'/' '{OFS="/"; print \$1,\$2}' | sort -u | head -n 1)
          echo "DIRECTORY=${DIRECTORY}" >> $GITHUB_ENV

      - name: Check pyproject.toml in directory
        id: check_pyproject
        run: |
          echo "Checking in directory: ${DIRECTORY}"
          if [ ! -f "${DIRECTORY}/pyproject.toml" ]; then
            echo "File pyproject.toml not found in ${DIRECTORY}. Skipping job."
            echo "PYPROJECT_FOUND=false" >> "$GITHUB_OUTPUT"
          else
            echo "File pyproject.toml found."
            echo "PYPROJECT_FOUND=true" >> "$GITHUB_OUTPUT"
          fi

  integration:
    runs-on: ubuntu-latest
    needs: check_pyproject
    if: needs.check_pyproject.outputs.pyproject_found == 'true'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check directory name
      run: |
        DIRECTORY=$(git log -1 --name-only --pretty=format: | awk -F'/' '{OFS="/"; print \$1,\$2}' | sort -u | head -n 1)
        echo "DIRECTORY=${DIRECTORY}" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        poetry install
      working-directory: ${{ env.DIRECTORY }}

    - name: Lint with Ruff
      run: |
        poetry run ruff check ${{ env.DIRECTORY }}
        poetry run ruff format --check ${{ env.DIRECTORY }}
      working-directory: ${{ env.DIRECTORY }}

    - name: Test with pytest
      run: |
        poetry run pytest tests
      working-directory: ${{ env.DIRECTORY }}

    - name: build package
      run: |
        poetry build
      working-directory: ${{ env.DIRECTORY }}

  bump-version:
    runs-on: ubuntu-latest
    needs: integration

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check directory name
      run: |
        DIRECTORY=$(git log -1 --name-only --pretty=format: | awk -F'/' '{print $1}' | sort -u | head -n 1)
        echo "DIRECTORY=${DIRECTORY}" >> $GITHUB_ENV

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        poetry install
      working-directory: ${{ env.DIRECTORY }}

    - name: Bump version
      run: |
        poetry version patch
      working-directory: ${{ env.DIRECTORY }}

    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pyproject.toml
        git commit -m "Bump version" || echo "No changes to commit"
        git push
      working-directory: ${{ env.DIRECTORY }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
