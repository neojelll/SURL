name: Python package

on:
  push:
    branches:
      - '**'

jobs:
  integration:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12.5'

    - name: Check Project name
      run: |
        export PROJECT_NAME=$(git log -1 --name-only --pretty=format: | awk -F'/' '{print $1}' | sort -u | head -n 1)
        echo "PROJECT_NAME=${PROJECT_NAME}" >> $GITHUB_ENV
        if [[ $PROJECT_NAME == .* || $PROJECT_NAME == *.log || $PROJECT_NAME == README.md ]]; then
          echo "Warning: PROJECT_NAME ($PROJECT_NAME) не подходит, дальнейшие шаги будут пропущены."
          echo "SKIP_REMAINING_STEPS=true" >> $GITHUB_ENV
        fi

    - name: Install Poetry and project dependencies
      if: env.SKIP_REMAINING_STEPS != 'true'
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry install

    - name: Lint with Ruff
      if: env.SKIP_REMAINING_STEPS != 'true'
      run: |
        cd ${{ env.PROJECT_NAME }}
        poetry run ruff check ${{ env.PROJECT_NAME }}
        poetry run ruff format --check ${{ env.PROJECT_NAME }} 

    - name: Test with pytest
      if: env.SKIP_REMAINING_STEPS != 'true'
      run: |
        cd ${{ env.PROJECT_NAME }}
        poetry run pytest tests
